/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.109
 * Generated at: 2025-10-05 14:08:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ipl.TeamDaoImp;
import ipl.Team;

public final class updateTeam_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("ipl.Team");
    _jspx_imports_classes.add("ipl.TeamDaoImp");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String code = request.getParameter("code");
    TeamDaoImp dao = new TeamDaoImp();
    Team team = dao.getTeamByCode(code);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>Update Team â€“ IPL Admin</title>\r\n");
      out.write("  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("  :root {\r\n");
      out.write("    --bg: #1e1e1e;\r\n");
      out.write("    --card-bg: #292929;\r\n");
      out.write("    --text-color: #f0f0f0;\r\n");
      out.write("    --shadow-dark: #858282;\r\n");
      out.write("    --shadow-light: #858282;\r\n");
      out.write("    --glow-color: rgb(132, 17, 240); /* glowing purple */\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  body {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    background: var(--bg);\r\n");
      out.write("    font-family: 'Segoe UI', sans-serif;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("    color: var(--text-color);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-card {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background: var(--card-bg);\r\n");
      out.write("    border-radius: 20px;\r\n");
      out.write("    padding: 40px;\r\n");
      out.write("    width: 400px;\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("    box-shadow:\r\n");
      out.write("      10px 10px 20px var(--shadow-dark),\r\n");
      out.write("      -10px -10px 20px var(--shadow-light);\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* NEW: Animated Glow Border */\r\n");
      out.write("  .neumorphic-card::before {\r\n");
      out.write("    content: \"\";\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    inset: 0;\r\n");
      out.write("    border-radius: 20px;\r\n");
      out.write("    padding: 2px;\r\n");
      out.write("    background: linear-gradient(270deg, transparent, var(--glow-color), transparent);\r\n");
      out.write("    background-size: 400% 400%;\r\n");
      out.write("    animation: border-glow 10s linear infinite;\r\n");
      out.write("    z-index: -1;\r\n");
      out.write("    mask:\r\n");
      out.write("      linear-gradient(#fff 0 0) content-box,\r\n");
      out.write("      linear-gradient(#fff 0 0);\r\n");
      out.write("    mask-composite: exclude;\r\n");
      out.write("    -webkit-mask-composite: xor;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @keyframes border-glow {\r\n");
      out.write("    0% { background-position: 0% 50%; }\r\n");
      out.write("    100% { background-position: 200% 50%; }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .form-title {\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("    position: relative;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  label {\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("    display: block;\r\n");
      out.write("    margin-bottom: 6px;\r\n");
      out.write("    color: var(--text-color);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .input-container {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .input-icon {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 15px;\r\n");
      out.write("    top: 50%;\r\n");
      out.write("    transform: translateY(-50%);\r\n");
      out.write("    color: #888;\r\n");
      out.write("    pointer-events: none;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-input {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 15px 15px 15px 45px;\r\n");
      out.write("    border: 1px solid rgba(132, 17, 240, 0.4);\r\n");
      out.write("    background: var(--card-bg);\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    color: var(--text-color);\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    transition: 0.2s ease-in-out;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-input:focus {\r\n");
      out.write("    border-color: var(--glow-color);\r\n");
      out.write("    box-shadow: 0 0 8px var(--glow-color);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .readonly {\r\n");
      out.write("    background: #333;\r\n");
      out.write("    color: #888;\r\n");
      out.write("    pointer-events: none;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .current-img {\r\n");
      out.write("    width: 120px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    display: block;\r\n");
      out.write("    margin: 10px auto;\r\n");
      out.write("    box-shadow: 5px 5px 10px var(--shadow-dark), -5px -5px 10px var(--shadow-light);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-file {\r\n");
      out.write("    padding: 12px 15px 12px 45px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    background: var(--card-bg);\r\n");
      out.write("    color: var(--text-color);\r\n");
      out.write("    border: 1px solid rgba(132, 17, 240, 0.4);\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-file:focus {\r\n");
      out.write("    border-color: var(--glow-color);\r\n");
      out.write("    box-shadow: 0 0 8px var(--glow-color);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-button {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    background: var(--card-bg);\r\n");
      out.write("    color: var(--text-color);\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    box-shadow: 5px 5px 10px var(--shadow-dark), -5px -5px 10px var(--shadow-light);\r\n");
      out.write("    transition: all 0.2s ease-in-out;\r\n");
      out.write("    margin-top: 5px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-button:hover {\r\n");
      out.write("    box-shadow: 2px 2px 5px var(--shadow-dark), -2px -2px 5px var(--shadow-light);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .neumorphic-button:active {\r\n");
      out.write("    box-shadow: inset 5px 5px 10px var(--shadow-dark), inset -5px -5px 10px var(--shadow-light);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  ::placeholder {\r\n");
      out.write("    color: #aaa;\r\n");
      out.write("  }\r\n");
      out.write("         .back-link {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      top: 15px;\r\n");
      out.write("      left: 20px;\r\n");
      out.write("      color: #ccc;\r\n");
      out.write("      font-size: 20px;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .back-link:hover {\r\n");
      out.write("      color: purple;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<a href=\"admindash.jsp\" class=\"back-link\"><i class=\"fas fa-arrow-left\"></i> Back</a>\r\n");
      out.write("\r\n");
      out.write("<div class=\"neumorphic-card\">\r\n");
      out.write("  <h2 class=\"form-title\"><i class=\"fas fa-pen-to-square\"></i> Update Team: ");
      out.print( team.getTeamName() );
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("  <form action=\"TeamServlet?action=update\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("    <input type=\"hidden\" name=\"teamCode\" value=\"");
      out.print( team.getTeamCode() );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"input-container\">\r\n");
      out.write("      <i class=\"fas fa-shield-alt input-icon\"></i>\r\n");
      out.write("      <input type=\"text\" class=\"neumorphic-input\" name=\"teamName\" value=\"");
      out.print( team.getTeamName() );
      out.write("\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"input-container\">\r\n");
      out.write("      <i class=\"fas fa-flag input-icon\"></i>\r\n");
      out.write("      <input type=\"text\" class=\"neumorphic-input readonly\" name=\"country\" value=\"");
      out.print( team.getCountry() );
      out.write("\" readonly>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"input-container\">\r\n");
      out.write("      <i class=\"fas fa-chalkboard-teacher input-icon\"></i>\r\n");
      out.write("      <input type=\"text\" class=\"neumorphic-input\" name=\"coachName\" value=\"");
      out.print( team.getCoachName() );
      out.write("\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"input-container\">\r\n");
      out.write("      <i class=\"fas fa-user-tie input-icon\"></i>\r\n");
      out.write("      <input type=\"text\" class=\"neumorphic-input\" name=\"captainName\" value=\"");
      out.print( team.getCaptainName() );
      out.write("\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <label><i class=\"fas fa-eye\"></i> Current Logo</label>\r\n");
      out.write("    <img src=\"");
      out.print( team.getLogoPath() );
      out.write("\" class=\"current-img\" alt=\"Team Logo\">\r\n");
      out.write("\r\n");
      out.write("    <label for=\"teamLogo\"><i class=\"fas fa-upload\"></i> Upload New Logo (optional)</label>\r\n");
      out.write("    <input type=\"file\" class=\"neumorphic-input neumorphic-file\" name=\"teamLogo\" accept=\"image/*\">\r\n");
      out.write("\r\n");
      out.write("    <button type=\"submit\" class=\"neumorphic-button\"><i class=\"fas fa-save\"></i> Save Changes</button>\r\n");
      out.write("  </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
