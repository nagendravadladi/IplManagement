/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.109
 * Generated at: 2025-10-11 14:03:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.Collections;
import java.util.Comparator;
import ipl.Match;
import ipl.MatchDaoImp;
import ipl.Team;
import ipl.TeamDaoImp;

public final class adminMatches_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl-1.2.jar", Long.valueOf(1759986698158L));
    _jspx_dependants.put("jar:file:/C:/Users/Dell/Desktop/Buddi/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/IPlManagement/WEB-INF/lib/jstl-impl-1.2.jar!/META-INF/c.tld", Long.valueOf(1308107170000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ipl.Match");
    _jspx_imports_classes.add("ipl.Team");
    _jspx_imports_classes.add("ipl.TeamDaoImp");
    _jspx_imports_classes.add("java.util.Comparator");
    _jspx_imports_classes.add("java.util.Collections");
    _jspx_imports_classes.add("ipl.MatchDaoImp");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Admin Dashboard - IPL Matches</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\">\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("            :root {\r\n");
      out.write("      --bg-dark: #1a1a1a;\r\n");
      out.write("      --card-dark: #242424;\r\n");
      out.write("      --text-light: #f5f5f5;\r\n");
      out.write("      --accent-orange: #ff6600;\r\n");
      out.write("      --shadow-blue: 0 4px 15px rgba(0, 174, 255, 0.2);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("      background-color: var(--bg-dark);\r\n");
      out.write("      color: var(--text-light);\r\n");
      out.write("      font-family: 'Poppins', sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Navbar */\r\n");
      out.write("    .navbar {\r\n");
      out.write("      background-color: var(--card-dark);\r\n");
      out.write("      padding: 10px;\r\n");
      out.write("      border-bottom: 1px solid #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar .container-fluid {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      gap: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar-brand {\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      font-size: 1.8rem;\r\n");
      out.write("      color: white;\r\n");
      out.write("      font-family: 'Brush Script MT';\r\n");
      out.write("      display: flex;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      gap: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar-brand img {\r\n");
      out.write("      width: 80px;\r\n");
      out.write("      height: auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-admin {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      right: 20px;\r\n");
      out.write("      top: 10px;\r\n");
      out.write("      background-color: var(--accent-orange);\r\n");
      out.write("      color: white;\r\n");
      out.write("      padding: 6px 15px;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .nav-link {\r\n");
      out.write("      color: white !important;\r\n");
      out.write("    } \r\n");
      out.write("    .navbar-brand:hover,\r\n");
      out.write("    .navbar-brand:focus {\r\n");
      out.write("      color: white !important; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .nav-link:hover,\r\n");
      out.write("    .nav-link:focus {\r\n");
      out.write("      color: var(--accent-blue) !important;\r\n");
      out.write("      background: transparent !important;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Dock style */\r\n");
      out.write("    .dock-container {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      gap: 30px;\r\n");
      out.write("      margin: 20px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .dock-item {\r\n");
      out.write("      transition: transform 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .dock-item:hover {\r\n");
      out.write("      transform: scale(1.3) translateY(-10px);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .dock-item a {\r\n");
      out.write("      color: var(--text-light);\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-size: 1.1rem;\r\n");
      out.write("      font-weight: 500;\r\n");
      out.write("      padding: 8px 15px;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      background-color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .dock-item a.active,\r\n");
      out.write("    .dock-item a:hover {\r\n");
      out.write("      background-color: var(--accent-orange);\r\n");
      out.write("      color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write(".section-title {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  font-size: 28px;\r\n");
      out.write("  font-weight: 600;\r\n");
      out.write("  margin-top: 30px;\r\n");
      out.write("  margin-bottom: 10px;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".section-title::after {\r\n");
      out.write("  content: \"\";\r\n");
      out.write("  display: block;\r\n");
      out.write("  width: 130px;\r\n");
      out.write("  height: 3px;\r\n");
      out.write("  background-color: red;\r\n");
      out.write("  margin: 10px auto 0 auto;\r\n");
      out.write("  border-radius: 4px;\r\n");
      out.write("}        /* Filter Bar - Adjusted colors for dark background */\r\n");
      out.write("        .filter-bar {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-bar button {\r\n");
      out.write("            border: 1px solid var(--accent-orange);\r\n");
      out.write("            color: var(--text-light);\r\n");
      out.write("            background: #333;\r\n");
      out.write("            padding: 8px 15px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            margin: 0 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-bar button.active {\r\n");
      out.write("            background-color: var(--accent-orange);\r\n");
      out.write("            border-color: var(--accent-orange);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        /* --- TIMELINE ARCHIVE STYLES (Adjusted for responsiveness) --- */\r\n");
      out.write("        .vn-sheduleList {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            padding-left: 50px;\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("        }\r\n");
      out.write("        .timeLineDivider {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            left: 20px;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            width: 2px;\r\n");
      out.write("            background-color: #E5E7E9;\r\n");
      out.write("        }\r\n");
      out.write("        #team_archive {\r\n");
      out.write("            list-style: none;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("        #team_archive li {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            background: #242424;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\r\n");
      out.write("            border: 1px solid #333;\r\n");
      out.write("            color: #f5f5f5;\r\n");
      out.write("        }\r\n");
      out.write("        .timeline-dot {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            left: -32px;\r\n");
      out.write("            top: 15px;\r\n");
      out.write("            width: 15px;\r\n");
      out.write("            height: 15px;\r\n");
      out.write("            background-color: var(--accent-orange);\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            z-index: 10;\r\n");
      out.write("            border: 3px solid var(--bg-dark);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Match Header & Metadata */\r\n");
      out.write("        .vn-schedule-head {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: flex-start;\r\n");
      out.write("            padding: 15px 20px 0 20px;\r\n");
      out.write("            border-bottom: 1px solid #333;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-matchOrder-container {\r\n");
      out.write("            width: 35%; /* Increased width to fit larger text */\r\n");
      out.write("            min-width: 180px; \r\n");
      out.write("            margin-right: 20px;\r\n");
      out.write("            padding-bottom: 15px;\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-matchOrder {\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--accent-orange);\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* New Styles for Status and Stage */\r\n");
      out.write("        .vn-stage-stage {\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            color: #cc5500; /* Darker orange/brown for match stage */\r\n");
      out.write("            font-size: 15px; \r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-matchStatus {\r\n");
      out.write("             font-size: 16px; /* Bigger font */\r\n");
      out.write("             font-weight: 700;\r\n");
      out.write("             margin-top: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .status-upcoming { color: #0088cc; } /* Blue for Upcoming */\r\n");
      out.write("        .status-completed { color: #28a745; } /* Green for Completed */\r\n");
      out.write("        .status-running { color: #dc3545; } /* Red for Running */\r\n");
      out.write("\r\n");
      out.write("        .vn-venueDet-container {\r\n");
      out.write("            flex-grow: 1;\r\n");
      out.write("            padding-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-venueDet span {\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--text-light);\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            text-transform: capitalize; /* Handled in scriptlet for safety, but good fallback */\r\n");
      out.write("        }\r\n");
      out.write("        .vn-matchDateTime {\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            color: #aaa;\r\n");
      out.write("            margin-top: 2px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Match Scoreboard */\r\n");
      out.write("        .vn-shedule-desk {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* FIX: Adjusted width for result comment and made it optional */\r\n");
      out.write("        .vn-result-comment {\r\n");
      out.write("            flex-shrink: 0;\r\n");
      out.write("            max-width: 250px;\r\n");
      out.write("            min-width: 100px;\r\n");
      out.write("            padding-right: 20px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-ticketTitle {\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: #28a745;\r\n");
      out.write("            font-size: 15px;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-pom {\r\n");
      out.write("            font-size: 13px;\r\n");
      out.write("            color: #00aaff;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            margin-top: 3px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Scoreboard Layout */\r\n");
      out.write("        .live-score {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            flex-grow: 1;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-shedTeam {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            width: 35%;\r\n");
      out.write("        }\r\n");
      out.write("        .schTeamLogo {\r\n");
      out.write("            width: 60px; /* Bigger Image */\r\n");
      out.write("            height: 60px; /* Bigger Image */\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            border: 1px solid #555;\r\n");
      out.write("            object-fit: contain;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-teamTitle {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-teamName h3 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--text-light);\r\n");
      out.write("        }\r\n");
      out.write("        .vn-teamCode h3 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            color: #aaa;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Scores */\r\n");
      out.write("        .vn-shedTeam p {\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            color: var(--accent-orange);\r\n");
      out.write("            margin: 5px 0 0 0;\r\n");
      out.write("        }\r\n");
      out.write("        .versus {\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            color: #555;\r\n");
      out.write("            padding: 0 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .versus::before {\r\n");
      out.write("            content: \"VS\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Action Buttons */\r\n");
      out.write("        .vn-ticket {\r\n");
      out.write("            flex-shrink: 0;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: flex-end;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-ticnbtn {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .vn-matchBtn {\r\n");
      out.write("            background-color: var(--accent-orange);\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 8px 15px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Icon Links */\r\n");
      out.write("        .matchReportIcon, .matchHLIcon {\r\n");
      out.write("            width: 35px;\r\n");
      out.write("            height: 35px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            background-color: #444;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            color: var(--text-light);\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("        .matchReportIcon:hover, .matchHLIcon:hover {\r\n");
      out.write("            background-color: var(--accent-orange);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("    .floating-button {\r\n");
      out.write("      position: fixed;\r\n");
      out.write("      top: 100px;\r\n");
      out.write("      right: 25px;\r\n");
      out.write("      z-index: 999;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .floating-button a {\r\n");
      out.write("      background-color: #28a745;\r\n");
      out.write("      color: white;\r\n");
      out.write("      padding: 12px 20px;\r\n");
      out.write("      border-radius: 30px;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      box-shadow: 0 4px 10px rgba(0,0,0,0.2);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .floating-button a:hover {\r\n");
      out.write("      background-color: #218838;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("        footer {\r\n");
      out.write("            background-color: var(--card-dark);\r\n");
      out.write("            color: #aaa;\r\n");
      out.write("            padding: 20px 0;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"#\">\r\n");
      out.write("      <img src=\"https://documents.iplt20.com/ipl/assets/images/ipl-logo-new-old.png\" alt=\"IPL Logo\">\r\n");
      out.write("      IPL Management\r\n");
      out.write("    </a>\r\n");
      out.write("    <a href=\"main.jsp\" class=\"btn btn-admin\">Logout</a>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"dock-container\">\r\n");
      out.write("  <div class=\"dock-item\"><a href=\"admindash.jsp\"><i class=\"fas fa-users\"></i> Teams</a></div>\r\n");
      out.write("  <div class=\"dock-item\"><a href=\"adminPlayers.jsp\"><i class=\"fas fa-user\"></i> Players</a></div>\r\n");
      out.write("  <div class=\"dock-item\"><a href=\"#\" class=\"active\"><i class=\"fas fa-chart-line\"></i> Matches</a></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"section-title\">Added Matches</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"filter-bar\">\r\n");
      out.write("    <button class=\"active\" onclick=\"filterMatches('All', this)\">All</button>\r\n");
      out.write("    <button onclick=\"filterMatches('Upcoming', this)\">Upcoming</button>\r\n");
      out.write("    <button onclick=\"filterMatches('Completed', this)\">Completed</button>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-4\">\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"vn-sheduleList vn-resultsList mb-4\">\r\n");
      out.write("        <span class=\"timeLineDivider\"></span>\r\n");
      out.write("        <ul id=\"team_archive\">\r\n");
      out.write("            ");

                // Scriptlet logic to fetch data
                MatchDaoImp matchDao = new MatchDaoImp();
                TeamDaoImp teamDao = new TeamDaoImp();
                List<Match> matches = matchDao.getAllMatches(); 
                
                // *** SORTING IMPLEMENTATION (DESCENDING ORDER OF MATCH ID) ***
                matches.sort(Comparator.comparing(Match::getMatchId).reversed());

                // Iterating over the list of matches
                for (Match m : matches) {
                    
                    int matchId = m.getMatchId();
                    String matchStage;

                    // --- MATCH STAGE LOGIC BASED ON MATCH ID (ASSUMING 70 LEAGUE + 4 PLAYOFFS) ---
                    if (matchId <= 70) {
                        matchStage = "League Match";
                    } else if (matchId == 71) {
                        matchStage = "Qualifier 1";
                    } else if (matchId == 72) {
                        matchStage = "Eliminator";
                    } else if (matchId == 73) {
                        matchStage = "Qualifier 2";
                    } else if (matchId == 74) {
                        matchStage = "Final";
                    } else {
                        matchStage = "Extra/TBD Match";
                    }
                    
                    // --- END: MATCH STAGE LOGIC ---

                    Team team1 = teamDao.getTeamByCode(m.getTeam1Code());
                    Team team2 = teamDao.getTeamByCode(m.getTeam2Code());

                    String team1Logo = team1 != null ? team1.getLogoPath() : "default-logo.png";
                    String team2Logo = team2 != null ? team2.getLogoPath() : "default-logo.png";

                    String team1Name = team1 != null ? team1.getTeamName() : "Unknown";
                    String team2Name = team2 != null ? team2.getTeamName() : "Unknown";

                    String team1Score = m.getTeam1Score() != null ? m.getTeam1Score() : "- / -";
                    String team2Score = m.getTeam2Score() != null ? m.getTeam2Score() : "- / -";
                    
                    String status = m.getStatus().toUpperCase();
                    String statusClass = "status-" + m.getStatus().toLowerCase(); // For dynamic color styling
                    
                    // Venue formatting: Capitalize first letter of venue
                    String venue = m.getVenue();
                    if (venue != null && venue.length() > 0) {
                        venue = venue.substring(0, 1).toUpperCase() + venue.substring(1).toLowerCase();
                    }
                    
                    String resultComment = "";
                    String playerOfMatch = m.getPlayerOfMatch() != null ? m.getPlayerOfMatch() : "";
                    
                    if (status.equalsIgnoreCase("COMPLETED") && m.getWinnerCode() != null) {
                        resultComment = m.getWinnerCode() + " Won the Match"; 
                    } else if (status.equalsIgnoreCase("UPCOMING")) {
                        resultComment = "Match Scheduled";
                    } else if (status.equalsIgnoreCase("RUNNING")) {
                        resultComment = "Live Score In Progress";
                    }
            
      out.write("\r\n");
      out.write("            <li data-status=\"");
      out.print( m.getStatus() );
      out.write("\">\r\n");
      out.write("                <div class=\"vn-schedule-head\">\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"vn-matchOrder-container\">\r\n");
      out.write("                        <span class=\"vn-matchOrder\">Match ID: ");
      out.print( m.getMatchId() );
      out.write("</span>\r\n");
      out.write("                        <span class=\"vn-stage-stage\">");
      out.print( matchStage.toUpperCase() );
      out.write("</span>\r\n");
      out.write("                        <div class=\"vn-matchStatus ");
      out.print( statusClass );
      out.write("\">\r\n");
      out.write("                            ");
      out.print( status );
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <span class=\"timeline-dot\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"vn-venueDet-container\">\r\n");
      out.write("                        <span class=\"vn-venueDet\">\r\n");
      out.write("                            <span>");
      out.print( venue );
      out.write("</span>\r\n");
      out.write("                        </span>\r\n");
      out.write("                        <div class=\"vn-matchDateTime\">\r\n");
      out.write("                            ");
      out.print( m.getMatchDate() );
      out.write(',');
      out.write(' ');
      out.print( m.getMatchTime() );
      out.write(" IST\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"vn-shedule-desk\">\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"vn-result-comment\">\r\n");
      out.write("                        ");
 if (!resultComment.isEmpty()) { 
      out.write("\r\n");
      out.write("                            <div class=\"vn-ticketTitle\">\r\n");
      out.write("                                **");
      out.print( resultComment );
      out.write("**\r\n");
      out.write("                            </div>\r\n");
      out.write("                            ");
 if (status.equalsIgnoreCase("COMPLETED") && !playerOfMatch.isEmpty()) { 
      out.write("\r\n");
      out.write("                                <div class=\"vn-pom\">\r\n");
      out.write("                                    Player of the Match: **");
      out.print( playerOfMatch );
      out.write("**\r\n");
      out.write("                                </div>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"vn-sheduleLogo\" style=\"flex-grow: 1;\">\r\n");
      out.write("                        <div class=\"live-score\">\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"vn-shedTeam\">\r\n");
      out.write("                                <img src=\"");
      out.print( team1Logo );
      out.write("\" alt=\"");
      out.print( team1Name );
      out.write("\" class=\"schTeamLogo\">\r\n");
      out.write("                                <div class=\"vn-teamTitle\">\r\n");
      out.write("                                    <div class=\"vn-teamName\">\r\n");
      out.write("                                        <h3>");
      out.print( team1Name );
      out.write("</h3>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"vn-teamCode\">\r\n");
      out.write("                                        <h3>");
      out.print( m.getTeam1Code() );
      out.write("</h3>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <p>");
      out.print( team1Score );
      out.write("</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <span class=\"versus\"></span>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"vn-shedTeam vn-team-2\">\r\n");
      out.write("                                <img src=\"");
      out.print( team2Logo );
      out.write("\" alt=\"");
      out.print( team2Name );
      out.write("\" class=\"schTeamLogo\">\r\n");
      out.write("                                <div class=\"vn-teamTitle\">\r\n");
      out.write("                                    <div class=\"vn-teamName\">\r\n");
      out.write("                                        <h3>");
      out.print( team2Name );
      out.write("</h3>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"vn-teamCode\">\r\n");
      out.write("                                        <h3>");
      out.print( m.getTeam2Code() );
      out.write("</h3>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <p>");
      out.print( team2Score );
      out.write("</p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"vn-ticket\">\r\n");
      out.write("                        <div class=\"vn-ticnbtn\">\r\n");
      out.write("                            \r\n");
      out.write("                            <a href=\"updateMatch.jsp?matchId=");
      out.print( m.getMatchId() );
      out.write("\" class=\"matchReportIcon\" title=\"Edit Match\">\r\n");
      out.write("                                <i class=\"fas fa-edit\"></i>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            <a onclick=\"confirmDelete(");
      out.print( m.getMatchId() );
      out.write(")\" class=\"matchHLIcon\" title=\"Delete Match\">\r\n");
      out.write("                                <i class=\"fas fa-trash\"></i>\r\n");
      out.write("                            </a>\r\n");
      out.write("                            \r\n");
      out.write("                                         </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                </div>\r\n");
      out.write("            </li>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"floating-button\">\r\n");
      out.write("    <a href=\"addMatch.jsp\"><i class=\"fas fa-plus-circle\"></i> Add Match</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<footer class=\"text-center mt-5\">© 2025 IPL Management. All Rights Reserved.</footer>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function confirmDelete(id) {\r\n");
      out.write("        if (confirm(\"Are you sure you want to delete this match?\")) {\r\n");
      out.write("            window.location.replace(\"MatchServlet?action=delete&matchId=\" + id); \r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function filterMatches(filter, button) {\r\n");
      out.write("        const buttons = document.querySelectorAll('.filter-bar button');\r\n");
      out.write("        buttons.forEach(btn => btn.classList.remove('active'));\r\n");
      out.write("        button.classList.add('active');\r\n");
      out.write("\r\n");
      out.write("        const matchItems = document.querySelectorAll('#team_archive li');\r\n");
      out.write("        matchItems.forEach(item => {\r\n");
      out.write("            const matchStatus = item.getAttribute('data-status');\r\n");
      out.write("            \r\n");
      out.write("            if (filter === 'All' || matchStatus.toUpperCase() === filter.toUpperCase()) {\r\n");
      out.write("                item.style.display = 'flex'; \r\n");
      out.write("            } else {\r\n");
      out.write("                item.style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
